// –ü—Ä–æ—Å—Ç–æ–π –ø–æ–ø-–∞–ø –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
// –î–∏–º–∞, —Å—é–¥–∞ –ø–∏—Ö–∞–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ü–µ–Ω—É, –æ–Ω–∞ –≤—Å—Ç–∞–Ω–µ—Ç –≤ –≤–µ—Ä—Å—Ç–∫—É –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ä–∞—Å—Å—á–µ—Ç–∞—Ö
let calendarPrice = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è

// –î–∏–º, —Ç—É—Ç —É –Ω–∞—Å –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø–æ—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ, –∑–∞–±–∏—Ä–∞–π –æ—Ç—Å—é–¥–∞
let calendarDaysCount = 0; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ

// –î–∏–º, —Ç–∞–º –±—É–¥–µ—Ç –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –¥–∞—Ç, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –∑–∞–±—Ä–∞—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
let deliveryDates = []; // –ú–∞—Å—Å–∏–≤ –¥–∞—Ç –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏

// –î–∏–º–∞, —Ç—É—Ç –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "06:00 - 07:00"), –∑–∞–±–∏—Ä–∞–π –æ—Ç—Å—é–¥–∞ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
let selectedDeliveryTime = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "18 –∞–ø—Ä–µ–ª—è"
function formatDateForDelivery(date) {
  const day = date.getDate();
  const month = date.getMonth();
  
  const months = [
    '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
    '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
  ];
  
  return `${day} ${months[month]}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–∞ "—Å —Å—É–ø–æ–º" –≤ —Ñ–æ—Ä–º–µ
function markSoupCheckbox(mealOptions) {
  const form = document.getElementById('hte-product-form');
  if (!form) {
    console.log('‚ùå –§–æ—Ä–º–∞ hte-product-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }
  
  // –ò—â–µ–º .accessory-values__item —Å —Ç–µ–∫—Å—Ç–æ–º "—Å —Å—É–ø–æ–º"
  const accessoryItems = form.querySelectorAll('.accessory-values__item');
  let soupCheckbox = null;
  
  accessoryItems.forEach(item => {
    const spanElement = item.querySelector('span[data-product-accessory-values-item-name]');
    if (spanElement && spanElement.textContent.toLowerCase().includes('—Å —Å—É–ø–æ–º')) {
      const checkbox = item.querySelector('input[type="checkbox"]');
      if (checkbox) {
        soupCheckbox = checkbox;
      }
    }
  });
  
  if (!soupCheckbox) {
    console.log('‚ùå –ß–µ–∫–±–æ–∫—Å "—Å —Å—É–ø–æ–º" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∞ "—Å —Å—É–ø–æ–º" –≤ mealOptions (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
  const hasSoup = mealOptions.toLowerCase().includes('—Å —Å—É–ø–æ–º');
  
  // –û—Ç–º–µ—á–∞–µ–º –∏–ª–∏ —Å–Ω–∏–º–∞–µ–º –æ—Ç–º–µ—Ç–∫—É —Å —á–µ–∫–±–æ–∫—Å–∞
  soupCheckbox.checked = hasSoup;
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
  const changeEvent = new Event('change', { bubbles: true });
  soupCheckbox.dispatchEvent(changeEvent);
  
  console.log(`‚úÖ –ß–µ–∫–±–æ–∫—Å "—Å —Å—É–ø–æ–º" ${hasSoup ? '–æ—Ç–º–µ—á–µ–Ω' : '—Å–Ω—è—Ç–∞ –æ—Ç–º–µ—Ç–∫–∞'}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–∞ "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º" –≤ —Ñ–æ—Ä–º–µ
function markSnackCheckbox(mealOptions) {
  const form = document.getElementById('hte-product-form');
  if (!form) {
    console.log('‚ùå –§–æ—Ä–º–∞ hte-product-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }
  
  // –ò—â–µ–º .accessory-values__item —Å —Ç–µ–∫—Å—Ç–æ–º "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º"
  const accessoryItems = form.querySelectorAll('.accessory-values__item');
  let snackCheckbox = null;
  
  accessoryItems.forEach(item => {
    const spanElement = item.querySelector('span[data-product-accessory-values-item-name]');
    if (spanElement && spanElement.textContent.toLowerCase().includes('—Å –ø–µ—Ä–µ–∫—É—Å–æ–º')) {
      const checkbox = item.querySelector('input[type="checkbox"]');
      if (checkbox) {
        snackCheckbox = checkbox;
      }
    }
  });
  
  if (!snackCheckbox) {
    console.log('‚ùå –ß–µ–∫–±–æ–∫—Å "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∞ "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º" –≤ mealOptions (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
  const hasSnack = mealOptions.toLowerCase().includes('—Å –ø–µ—Ä–µ–∫—É—Å–æ–º');
  
  // –û—Ç–º–µ—á–∞–µ–º –∏–ª–∏ —Å–Ω–∏–º–∞–µ–º –æ—Ç–º–µ—Ç–∫—É —Å —á–µ–∫–±–æ–∫—Å–∞
  snackCheckbox.checked = hasSnack;
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
  const changeEvent = new Event('change', { bubbles: true });
  snackCheckbox.dispatchEvent(changeEvent);
  
  console.log(`‚úÖ –ß–µ–∫–±–æ–∫—Å "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º" ${hasSnack ? '–æ—Ç–º–µ—á–µ–Ω' : '—Å–Ω—è—Ç–∞ –æ—Ç–º–µ—Ç–∫–∞'}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–ª–∏–∂–∞–π—à–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
function getNearestDeliveryDate() {
  // –ü–æ–ª—É—á–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const deliverySchedule = window.PRODUCT_CONFIG?.deliverySchedule || window.PROGRAM_CONFIG?.deliverySchedule || 'every-day';
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (–Ω–µ —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
  const currentTime = window.currentTime ? new Date(window.currentTime) : new Date();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–∫–∞–∑–∞ (—á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã) –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  const globalHour = currentTime.getHours();
  const globalMinutes = currentTime.getMinutes();
  const globalTimeInMinutes = globalHour * 60 + globalMinutes;
  
  // –í—Ä–µ–º—è –¥–µ–¥–ª–∞–π–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ (13:30 = 13 * 60 + 30 = 810 –º–∏–Ω—É—Ç)
  const deadlineTimeInMinutes = 13 * 60 + 30; // 13:30
  
  let deliveryDate;
  
  if (globalTimeInMinutes < deadlineTimeInMinutes) {
    // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –¥–æ 13:30 - –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
    deliveryDate = new Date(currentTime);
    deliveryDate.setDate(currentTime.getDate() + 1);
  } else {
    // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –ø–æ—Å–ª–µ 13:30 - –¥–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –¥–µ–Ω—å
    deliveryDate = new Date(currentTime);
    deliveryDate.setDate(currentTime.getDate() + 2);
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –≤ 00:00:00 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞—Ç
  deliveryDate.setHours(0, 0, 0, 0);
  
  // –ï—Å–ª–∏ –≥—Ä–∞—Ñ–∏–∫ "—á–µ—Ä–µ–∑ –¥–µ–Ω—å", –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
  if (deliverySchedule === 'every-other-day') {
    // –ì—Ä–∞—Ñ–∏–∫ "—á–µ—Ä–µ–∑ –¥–µ–Ω—å" - –¥–∞—Ç–∞ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
  }
  
  return deliveryDate;
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function logSelectedConfiguration() {
  console.log('üìã –í–´–ë–†–ê–ù–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:');
  
  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  const config = window.PRODUCT_CONFIG || window.PROGRAM_CONFIG;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  if (!config) {
    console.log('‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    return;
  }
  
  // 0. –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
  const programName = config?.programName || config?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
  console.log(`0. üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: ${programName}`);
  
  // 1. –í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∏–µ—Ç–∞ - –ø–æ–ª—É—á–∞–µ–º –∏–∑ UI –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  let selectedDiet = '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';
  if (config?.dietTypes) {
    // –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–∏–µ—Ç—ã
    const activeDietButton = document.querySelector('.diet-option.active');
    if (activeDietButton) {
      const dietValue = activeDietButton.getAttribute('data-diet-type');
      const dietOption = config.dietTypes.find(diet => diet.value === dietValue);
      selectedDiet = dietOption?.label || dietValue;
    } else if (config.dietTypes.length === 1) {
      // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –¥–∏–µ—Ç—ã, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      selectedDiet = config.dietTypes[0].label;
    }
  }
  
  console.log(`1. ü•ó –í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∏–µ—Ç–∞: ${selectedDiet}`);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ input —Å name="tip_pitaniya" –≤ —Ñ–æ—Ä–º–µ hte-product-form
  function selectTipPitaniyaInput(selectedDiet) {
    const form = document.getElementById('hte-product-form');
    if (!form) {
      console.log('‚ùå –§–æ—Ä–º–∞ hte-product-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    // –ò—â–µ–º –≤—Å–µ input —Å name="tip_pitaniya" –≤ —Ñ–æ—Ä–º–µ
    const tipPitaniyaInputs = form.querySelectorAll('input[name="tip_pitaniya"]');
    
    if (tipPitaniyaInputs.length === 0) {
      console.log('‚ùå Input —Å name="tip_pitaniya" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
      return;
    }
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º input
    tipPitaniyaInputs.forEach(input => {
      // –ò—â–µ–º —Å–ª–µ–¥—É—é—â–∏–π span –ø–æ—Å–ª–µ input
      const nextSpan = input.nextElementSibling;
      
      if (nextSpan && nextSpan.tagName === 'SPAN') {
        const spanText = nextSpan.textContent.trim();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ span —Ç–µ–∫—Å—Ç selectedDiet (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
        if (spanText.toLowerCase().includes(selectedDiet.toLowerCase())) {
          // –î–µ–ª–∞–µ–º —ç—Ç–æ—Ç input –≤—ã–±—Ä–∞–Ω–Ω—ã–º
          if (input.type === 'radio' || input.type === 'checkbox') {
            input.checked = true;
          } else {
            input.value = selectedDiet;
          }
          
          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
          const changeEvent = new Event('change', { bubbles: true });
          input.dispatchEvent(changeEvent);
        }
      }
    });
  }
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–±–æ—Ä–∞ input
  selectTipPitaniyaInput(selectedDiet);
  
  // 2. –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å - –ø–æ–ª—É—á–∞–µ–º –∏–∑ UI –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  let selectedCalories = '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';
  if (config?.calorieOptions) {
    // –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏
    const activeCalorieButton = document.querySelector('.calorie-option.active');
    if (activeCalorieButton) {
      const calorieValue = activeCalorieButton.getAttribute('data-calories');
      const calorieOption = config.calorieOptions.find(cal => cal.value === calorieValue);
      selectedCalories = calorieOption?.label || calorieValue;
    } else if (config.calorieOptions.length === 1) {
      // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      selectedCalories = config.calorieOptions[0].label;
    }
  }
    console.log(`2. üî• –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: ${selectedCalories}`);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ input —Å name="kalorijnost_" –≤ —Ñ–æ—Ä–º–µ hte-product-form
  function selectKalorijnostInput(selectedCalories) {
    const form = document.getElementById('hte-product-form');
    if (!form) {
      console.log('‚ùå –§–æ—Ä–º–∞ hte-product-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏ selectedCalories
    const calorieNumber = selectedCalories.match(/\d+/);
    if (!calorieNumber) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏:', selectedCalories);
      return;
    }
    
    const calorieValue = calorieNumber[0];
    
    // –ò—â–µ–º –≤—Å–µ input —Å name="kalorijnost_" –≤ —Ñ–æ—Ä–º–µ
    const kalorijnostInputs = form.querySelectorAll('input[name="kalorijnost_"]');
    
    if (kalorijnostInputs.length === 0) {
      console.log('‚ùå Input —Å name="kalorijnost_" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
      return;
    }
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º input
    kalorijnostInputs.forEach(input => {
      // –ò—â–µ–º —Å–ª–µ–¥—É—é—â–∏–π span –ø–æ—Å–ª–µ input
      const nextSpan = input.nextElementSibling;
      
      if (nextSpan && nextSpan.tagName === 'SPAN') {
        const spanText = nextSpan.textContent.trim();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ span —á–∏—Å–ª–æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
        if (spanText.toLowerCase().includes(calorieValue.toLowerCase())) {
          // –î–µ–ª–∞–µ–º —ç—Ç–æ—Ç input –≤—ã–±—Ä–∞–Ω–Ω—ã–º
          if (input.type === 'radio' || input.type === 'checkbox') {
            input.checked = true;
          } else {
            input.value = calorieValue;
          }
          
          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
          const changeEvent = new Event('change', { bubbles: true });
          input.dispatchEvent(changeEvent);
        }
      }
    });
  }
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–±–æ—Ä–∞ input –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏
  selectKalorijnostInput(selectedCalories);  
  
  // 3. –í—ã–±—Ä–∞–Ω–Ω—ã–µ meal options - –ø–æ–ª—É—á–∞–µ–º –∏–∑ UI
  let mealOptions = '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';
  // –ò—â–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ meal options
  const toggleSwitches = document.querySelectorAll('.meal-option .toggle-switch');
  if (toggleSwitches.length > 0) {
    const selectedMeals = [];
    toggleSwitches.forEach((toggle, index) => {
      if (toggle.classList.contains('active')) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ–ø—Ü–∏–∏ –∏–∑ —Å–æ—Å–µ–¥–Ω–µ–≥–æ span
        const optionText = toggle.closest('.meal-option').querySelector('span');
        if (optionText) {
          selectedMeals.push(optionText.textContent);
        } else {
          // –ï—Å–ª–∏ span –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
          const mealLabels = ['–£–±—Ä–∞—Ç—å –∑–∞–≤—Ç—Ä–∞–∫ –∏ –ø–µ—Ä–µ–∫—É—Å', '–£–±—Ä–∞—Ç—å —É–∂–∏–Ω –∏ –ø–µ—Ä–µ–∫—É—Å'];
          selectedMeals.push(mealLabels[index] || `–û–ø—Ü–∏—è ${index + 1}`);
        }
      }
    });
    if (selectedMeals.length > 0) {
      mealOptions = selectedMeals.join(', ');
    }
  }
  console.log(`3. üçΩÔ∏è –í—ã–±—Ä–∞–Ω–Ω—ã–µ meal options: ${mealOptions}`);

  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–∞ "—Å —Å—É–ø–æ–º"
  markSoupCheckbox(mealOptions);
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–∞ "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º"
  markSnackCheckbox(mealOptions);

  

  // 4. –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∞–ª–ª–µ—Ä–≥–µ–Ω—ã
  let allergensText = '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';
  if (config?.allergens) {
    if (config.allergens.enabled === false) {
      allergensText = config.allergens.texts?.allergenText || '–ê–ª–ª–µ—Ä–≥–µ–Ω—ã –Ω–µ –∏—Å–∫–ª—é—á–∞—é—Ç—Å—è';
    } else {
      // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∞–ª–ª–µ—Ä–≥–µ–Ω—ã –∏–∑ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      const selectedAllergenItems = document.querySelectorAll('.allergen-item.selected');
      if (selectedAllergenItems.length > 0) {
        const allergenNames = Array.from(selectedAllergenItems).map(item => {
          const allergenName = item.querySelector('.allergen-name');
          return allergenName ? allergenName.textContent : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–ª–ª–µ—Ä–≥–µ–Ω';
        });
        allergensText = allergenNames.join(', ');
      } else if (config.allergens.texts?.allergenText) {
        // –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–ª–ª–µ—Ä–≥–µ–Ω–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        allergensText = config.allergens.texts.allergenText;
      }
    }
  }
    console.log(`4. ‚ö†Ô∏è –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∞–ª–ª–µ—Ä–≥–µ–Ω—ã: ${allergensText}`);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–æ–≤ –≤ —Ñ–æ—Ä–º–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–ª–ª–µ—Ä–≥–µ–Ω–æ–≤ —Å —Ü–µ–Ω–æ–π
  function markAllergenCheckboxes() {
    // –ù–∞—Ö–æ–¥–∏–º –±–ª–æ–∫ —Å –∞–ª–ª–µ—Ä–≥–µ–Ω–∞–º–∏
    const allergenList = document.getElementById('allergenList');
    if (!allergenList) {
      console.log('‚ùå –ë–ª–æ–∫ allergenList –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–ª–ª–µ—Ä–≥–µ–Ω–æ–≤ —Å –≤–∏–¥–∏–º—ã–º –±–ª–æ–∫–æ–º —Ü–µ–Ω—ã
    const selectedAllergens = allergenList.querySelectorAll('.allergen-item.selected');
    let selectedCount = 0;
    
    selectedAllergens.forEach(allergen => {
      const priceBlock = allergen.querySelector('.allergen-price');
      if (priceBlock && priceBlock.style.display !== 'none') {
        selectedCount++;
      }
    });
    
    // –ù–∞—Ö–æ–¥–∏–º —Ñ–æ—Ä–º—É
    const form = document.getElementById('hte-product-form');
    if (!form) {
      console.log('‚ùå –§–æ—Ä–º–∞ hte-product-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    // –ò—â–µ–º –±–ª–æ–∫ .accessory-item —Å —Ç–µ–∫—Å—Ç–æ–º "–ò—Å–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç"
    const accessoryItems = form.querySelectorAll('.accessory-item');
    let targetAccessoryItem = null;
    
    accessoryItems.forEach(item => {
      const nameElement = item.querySelector('[data-product-accessory-name]');
      if (nameElement && nameElement.textContent.includes('–ò—Å–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')) {
        targetAccessoryItem = item;
      }
    });
    
    if (!targetAccessoryItem) {
      console.log('‚ùå –ë–ª–æ–∫ .accessory-item —Å "–ò—Å–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –≤ .accessory-values
    const accessoryValues = targetAccessoryItem.querySelector('.accessory-values');
    if (!accessoryValues) {
      console.log('‚ùå –ë–ª–æ–∫ .accessory-values –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const checkboxes = accessoryValues.querySelectorAll('input[type="checkbox"]');
    
    // –û—Ç–º–µ—á–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–∫–±–æ–∫—Å–æ–≤
    checkboxes.forEach((checkbox, index) => {
      if (index < selectedCount) {
        checkbox.checked = true;
      } else {
        checkbox.checked = false;
      }
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
      const changeEvent = new Event('change', { bubbles: true });
      checkbox.dispatchEvent(changeEvent);
    });
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ input —Å name="allergens"
    const allergensInput = form.querySelector('input[name="allergens"]');
    
    if (allergensInput) {
      allergensInput.value = allergensText;
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
      const changeEvent = new Event('change', { bubbles: true });
      allergensInput.dispatchEvent(changeEvent);
      
      // –¢–∞–∫–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ input
      const inputEvent = new Event('input', { bubbles: true });
      allergensInput.dispatchEvent(inputEvent);

    } else {
      console.log('‚ùå Input —Å name="allergens" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
      console.log('üîç –í—Å–µ input –≤ —Ñ–æ—Ä–º–µ:', form.querySelectorAll('input'));
    }
  }
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–æ–≤
  markAllergenCheckboxes();  
  
  // 7. –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–Ω–µ–π
  const daysCount = window.calendarDaysCount || calendarDaysCount || 0;
  console.log(`7. üìÖ –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: ${daysCount}`);
  
  // 5. –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å
  console.log(`5. üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: ${calendarPrice || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'} ‚ÇΩ`);
  
  // 6. –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ (–æ–±—â–∞—è –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π)
  if (calendarPrice && daysCount) {
    const totalPrice = parseInt(calendarPrice.replace(/\s/g, '')) * daysCount;
    console.log(`6. üí≥ –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ (–æ–±—â–∞—è): ${totalPrice.toLocaleString('ru-RU')} ‚ÇΩ`);
  } else {
    console.log('6. üí≥ –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ (–æ–±—â–∞—è): –ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ');
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ input —Å name="quantity"
  const form = document.getElementById('hte-product-form');
  if (form) {
    const quantityInput = form.querySelector('input[name="quantity"]');
    if (quantityInput) {
      quantityInput.value = daysCount;
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
      const changeEvent = new Event('change', { bubbles: true });
      quantityInput.dispatchEvent(changeEvent);
    } else {
      console.log('‚ùå Input —Å name="quantity" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
    }
  
  } else {
    console.log('‚ùå –§–æ—Ä–º–∞ hte-product-form –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // 8. –ù–∞—á–∞–ª—å–Ω–∞—è –∏ –∫–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
  if (window.calendarStartDate && window.calendarEndDate) {
    const startDate = new Date(window.calendarStartDate).toLocaleDateString('ru-RU');
    const endDate = new Date(window.calendarEndDate).toLocaleDateString('ru-RU');
    console.log(`8. üìÜ –î–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: ${startDate} - ${endDate}`);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ input —Å name="delivery_dates"
    if (form) {
      const deliveryDatesInput = form.querySelector('input[name="delivery_dates"]');
      if (deliveryDatesInput) {

        deliveryDatesInput.value = `–î–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: ${startDate} - ${endDate}`;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        const changeEvent = new Event('change', { bubbles: true });
        deliveryDatesInput.dispatchEvent(changeEvent);
      } else {
        console.log('‚ùå Input —Å name="delivery_dates" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
      }
    }
  } else {
    console.log('8. üìÜ –î–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: –ù–µ –≤—ã–±—Ä–∞–Ω–æ');
  }
  
  // 9. –ú–∞—Å—Å–∏–≤ –¥–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ ("11.08.2025", "12.08.2025")
  if (deliveryDates.length > 0) {
    const formattedDates = deliveryDates.map(date => 
      date.toLocaleDateString('ru-RU')
    );
    console.log(`9. üìã –ú–∞—Å—Å–∏–≤ –¥–∞—Ç: [${formattedDates.map(d => `"${d}"`).join(', ')}]`);
    if (form) {
      const deliveryDatesMassiveInput = form.querySelector('input[name="delivery_dates_massive"]');
      if (deliveryDatesMassiveInput) {
        deliveryDatesMassiveInput.value = `–ú–∞—Å—Å–∏–≤ –¥–∞—Ç: [${formattedDates.map(d => `"${d}"`).join(', ')}]`;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        const changeEvent = new Event('change', { bubbles: true });
        deliveryDatesMassiveInput.dispatchEvent(changeEvent);
      } else {
        console.log('‚ùå Input —Å name="delivery_dates_massive" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–æ—Ä–º–µ');
      }
    }
  } else {
    console.log('9. üìã –ú–∞—Å—Å–∏–≤ –¥–∞—Ç: –ü—É—Å—Ç–æ–π');
  }
  
  // 10. –í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏
  if (selectedDeliveryTime) {
    const timeRange = selectedDeliveryTime.split('-');
    if (timeRange.length === 2) {
      console.log(`10. üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: —Å ${timeRange[0]} –¥–æ ${timeRange[1]}`);
    } else {
      console.log(`10. üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: ${selectedDeliveryTime}`);
    }
  } else {
    // –ï—Å–ª–∏ –≤—Ä–µ–º—è –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–ª–æ—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const config = window.PRODUCT_CONFIG || window.PROGRAM_CONFIG;
    if (config?.deliveryTimeSlots && config.deliveryTimeSlots.length > 0) {
      const firstSlot = config.deliveryTimeSlots[0];
      const timeRange = firstSlot.value.split('-');
      if (timeRange.length === 2) {
        console.log(`10. üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: —Å ${timeRange[0]} –¥–æ ${timeRange[1]} (–ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–ª–æ—Ç)`);
      } else {
        console.log(`10. üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: ${firstSlot.value} (–ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–ª–æ—Ç)`);
      }
    } else {
      console.log('10. üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: —Å 06:00 –¥–æ 07:00 (fallback)');
    }
  }
  
  console.log('üìã –ö–û–ù–ï–¶ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
function renderTimeSlots() {
  const timeList = document.getElementById('timeList');
  if (!timeList) return;

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  const config = window.PRODUCT_CONFIG || window.PROGRAM_CONFIG;
  if (!config || !config.deliveryTimeSlots) {
    console.warn('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return;
  }

  // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ—Ç—ã
  timeList.innerHTML = '';

  // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞–∂–¥—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç
  config.deliveryTimeSlots.forEach(slot => {
    const timeItem = document.createElement('div');
    timeItem.className = 'time-item';
    timeItem.setAttribute('data-time', slot.value);
    
    const timeSlot = document.createElement('span');
    timeSlot.className = 'time-slot';
    timeSlot.textContent = slot.label;
    
    timeItem.appendChild(timeSlot);
    timeList.appendChild(timeItem);
  });

  // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  initTimeSlotEventListeners();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
function initTimeSlotEventListeners() {
  const timeItems = document.querySelectorAll('.time-item');
  const deliveryTimeInput = document.getElementById('deliveryTimeInput');
  const deliveryTimeDropdown = document.getElementById('deliveryTimeDropdown');
  const inputFieldWithIcon = deliveryTimeInput?.closest('.input-field.with-icon');

  if (timeItems) {
    timeItems.forEach(item => {
      item.addEventListener('click', () => {
        const timeValue = item.getAttribute('data-time');
        if (deliveryTimeInput) {
          deliveryTimeInput.value = timeValue;
          selectedDeliveryTime = timeValue;
          window.selectedDeliveryTime = selectedDeliveryTime;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ —Å –Ω–æ–≤—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
        updateDeliveryInfo();
        
        // –õ–æ–≥–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
        logSelectedConfiguration();
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥—Ä–æ–ø-–¥–∞—É–Ω
        if (deliveryTimeDropdown) {
          deliveryTimeDropdown.classList.remove('active');
        }
        if (inputFieldWithIcon) {
          inputFieldWithIcon.classList.remove('active');
        }
      });
    });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
function updateDeliveryInfo() {
  const deliveryInfoElement = document.getElementById('deliveryInfo');
  if (!deliveryInfoElement) {
    console.log('‚ùå –≠–ª–µ–º–µ–Ω—Ç deliveryInfo –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  let deliveryText = '';

  // –ü–æ–ª—É—á–∞–µ–º –±–ª–∏–∂–∞–π—à—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏
  const nearestDate = getNearestDeliveryDate();
  const formattedDate = formatDateForDelivery(nearestDate);
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ –±–ª–∏–∂–∞–π—à–µ–π –¥–æ—Å—Ç–∞–≤–∫–µ
  deliveryText += `–ë–ª–∏–∂–∞–π—à–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ${formattedDate}`;

  // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const config = window.PRODUCT_CONFIG || window.PROGRAM_CONFIG;
  
  if (config?.deliveryTimeSlots && config.deliveryTimeSlots.length > 0) {
    const firstSlot = config.deliveryTimeSlots[0];
    const timeRange = firstSlot.value.split('-');
    if (timeRange.length === 2) {
      deliveryText += ` —Å ${timeRange[0]} –¥–æ ${timeRange[1]}`;
    } else {
      deliveryText += ` ‚Ä¢ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: ${firstSlot.value}`;
    }
  } else {
    // Fallback –µ—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
    deliveryText += ' —Å 06:00 –¥–æ 07:00';
  }
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–ª–∞–≤–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  deliveryInfoElement.classList.add('updating');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
  setTimeout(() => {
    deliveryInfoElement.textContent = deliveryText;
    deliveryInfoElement.classList.remove('updating');
  }, 150); // –ü–æ–ª–æ–≤–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ø–∞–ø–∞
function initQuantityPopup() {
  // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  if (window.quantityPopupInitialized) {
    console.log('‚ö†Ô∏è –ü–æ–ø–∞–ø —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
    return;
  }
  
  const popup = document.getElementById('quantityPopup');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ popup –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (!popup) {
    console.log('‚ùå –ü–æ–ø–∞–ø quantityPopup –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 100ms');
    setTimeout(initQuantityPopup, 100);
    return;
  }
  
  const addToCartBtn = document.querySelector('.add-to-cart-btn');
  const closeBtn = document.getElementById('popupClose');
  const overlay = popup.querySelector('.popup-overlay');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ "–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"
  if (!addToCartBtn) {
    console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 100ms');
    setTimeout(initQuantityPopup, 100);
    return;
  }

  console.log('‚úÖ –ü–æ–ø–∞–ø –∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω—ã, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
  
  // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ø-–∞–ø–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"
  addToCartBtn.addEventListener('click', (e) => {
    e.preventDefault();
    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"');
    
    // –®–ê–ì 1: –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∏ –∫–ª–∞–¥–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    const totalPriceElement = document.querySelector('.total-price');
    if (totalPriceElement) {
      const currentPrice = totalPriceElement.textContent.trim();
      // –£–±–∏—Ä–∞–µ–º "‚ÇΩ" –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π —Ü–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
      calendarPrice = currentPrice.replace('‚ÇΩ', '').trim();
    }
    
    // –®–ê–ì 2: –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –≤–µ—Ä—Å—Ç–∫—É
    const calendarTotalValue = document.querySelector('.total-value');
    if (calendarTotalValue && calendarPrice) {
      calendarTotalValue.textContent = `${calendarPrice} ‚ÇΩ –∑–∞ ${calendarDaysCount} –¥–Ω–µ–π`;
    }
    
    // –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–∫—Ä—ã–≤–∞–µ–º popup-total –µ—Å–ª–∏ –¥–Ω–µ–π –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
    const popupTotal = document.querySelector('.popup-total');
    if (popupTotal && window.calendarDaysCount === 0) {
      popupTotal.style.display = 'none';
    } else if (popupTotal) {
      popupTotal.style.display = 'block';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–µ—Ä–µ–¥ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    updateDeliveryDates();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    logSelectedConfiguration();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞—Ç—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ø-–∞–ø–∞ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    resetPopupDates();
    
    popup.classList.add('active');
  });
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–µ–Ω—ã –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
  function updateCalendarDisplay() {
    const calendarTotalValue = document.querySelector('.total-value');
    const popupTotal = document.querySelector('.popup-total');
    
    if (calendarTotalValue && calendarPrice) {
      calendarTotalValue.textContent = `${calendarPrice} ‚ÇΩ –∑–∞ ${window.calendarDaysCount} –¥–Ω–µ–π`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ popup-total
    if (popupTotal && calendarPrice && window.calendarDaysCount !== undefined) {
      if (window.calendarDaysCount === 0) {
        // –°–∫—Ä—ã–≤–∞–µ–º popup-total –µ—Å–ª–∏ –¥–Ω–µ–π –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
        popupTotal.style.display = 'none';
      } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º popup-total –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
        popupTotal.style.display = 'block';
        
        const totalPrice = parseInt(calendarPrice.replace(/\s/g, '')) * window.calendarDaysCount;
        const totalValueElement = popupTotal.querySelector('.total-value');
        if (totalValueElement) {
          totalValueElement.textContent = `${totalPrice.toLocaleString('ru-RU')} ‚ÇΩ –∑–∞ ${window.calendarDaysCount} –¥–Ω–µ–π`;
        }
      }
      
      // –õ–æ–≥–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
      if (window.calendarDaysCount > 0) {
        updateDeliveryDates();
        logSelectedConfiguration();
      }
    }
  }
  
  // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  window.updateCalendarDisplay = updateCalendarDisplay;
  window.calendarDaysCount = calendarDaysCount;
  
  // –†–µ–Ω–¥–µ—Ä–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  renderTimeSlots();
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç –¥–æ—Å—Ç–∞–≤–∫–∏
  function updateDeliveryDates() {
    // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞—Ç
    deliveryDates = [];
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
    if (window.calendarDaysCount > 0 && window.calendarStartDate && window.calendarEndDate) {
      const start = new Date(window.calendarStartDate);
      const end = new Date(window.calendarEndDate);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–∞—Ç—ã –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ, –∫—Ä–æ–º–µ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö
      const currentDate = new Date(start);
      while (currentDate <= end) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∞ –ª–∏ –¥–∞—Ç–∞
        const isExcluded = window.calendarExcludedDates && 
          window.calendarExcludedDates.some(excludedDate => 
            new Date(excludedDate).toDateString() === currentDate.toDateString()
          );
        
        if (!isExcluded) {
          deliveryDates.push(new Date(currentDate));
        }
        
        currentDate.setDate(currentDate.getDate() + 1);
      }
    }
  }
  
  // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
  window.updateDeliveryDates = updateDeliveryDates;
  
  // –î–µ–ª–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
  window.selectedDeliveryTime = selectedDeliveryTime;
  
  // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π –≤ –ø–æ–ø–∞–ø–µ
  const startDateInput = document.getElementById('startDateInput');
  const startDateCalendar = document.getElementById('startDateCalendar');
  const endDateInput = document.getElementById('endDateInput');
  
  // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Calendar listeners —Ç–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –ø–æ–ø–∞–ø –æ—Ç–∫—Ä—ã—Ç
  if (window.reinitializeCalendarListeners) {
    window.reinitializeCalendarListeners();
  }
  
  // –ü—Ä–æ—Å—Ç–æ–π fallback –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π Calendar –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
  if (startDateInput && startDateCalendar && !startDateInput.hasCalendarListener) {
    startDateInput.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      const isActive = startDateCalendar.classList.contains('active');
      
      if (isActive) {
        startDateCalendar.classList.remove('active');
      } else {
        startDateCalendar.classList.add('active');
        
        if (window.calendarInstance && typeof window.calendarInstance.renderCalendar === 'function') {
          window.calendarInstance.activeInput = 'start';
          window.calendarInstance.renderCalendar();
        } else {
          renderSimpleCalendar(startDateCalendar);
        }
      }
    });
    startDateInput.hasCalendarListener = true;
  }
  
  if (endDateInput && !endDateInput.hasCalendarListener) {
    endDateInput.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      const isActive = startDateCalendar.classList.contains('active');
      
      if (isActive) {
        startDateCalendar.classList.remove('active');
      } else {
        startDateCalendar.classList.add('active');
        
        if (window.calendarInstance && typeof window.calendarInstance.renderCalendar === 'function') {
          window.calendarInstance.activeInput = 'end';
          window.calendarInstance.renderCalendar();
        } else {
          renderSimpleCalendar(startDateCalendar);
        }
      }
    });
    endDateInput.hasCalendarListener = true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  if (startDateCalendar) {
    const prevBtn = startDateCalendar.querySelector('.prev-btn');
    const nextBtn = startDateCalendar.querySelector('.next-btn');
    const calendarGrid = startDateCalendar.querySelector('.calendar-grid');
    
    if (prevBtn) {
      prevBtn.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ—Å—è—Ü—É
        console.log('–ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü');
      });
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–µ—Å—è—Ü—É
        console.log('–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü');
      });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
    if (calendarGrid) {
      calendarGrid.addEventListener('click', (e) => {
        if (e.target.classList.contains('calendar-day') && !e.target.classList.contains('inactive') && !e.target.classList.contains('past')) {
          const selectedDate = e.target.textContent;
          const month = startDateCalendar.querySelector('.calendar-month').textContent;
          const year = startDateCalendar.querySelector('.calendar-year').textContent;
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
          const formattedDate = `${selectedDate} ${month} ${year}`;
          startDateInput.value = formattedDate;
          
          // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
          startDateCalendar.classList.remove('active');
          
          console.log('–í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞:', formattedDate);
        }
      });
    }
  }
  
  // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –æ—Å–Ω–æ–≤–Ω–æ–π Calendar –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
  function renderSimpleCalendar(calendarElement) {
    if (!calendarElement || !window.currentTime) {
      console.log('‚ùå renderSimpleCalendar: –Ω–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
    const currentDeliverySchedule = window.PRODUCT_CONFIG?.deliverySchedule || window.PROGRAM_CONFIG?.deliverySchedule || 'every-day';
    
    const grid = calendarElement.querySelector('.calendar-grid');
    if (!grid) {
      console.log('‚ùå renderSimpleCalendar: –Ω–µ—Ç grid —ç–ª–µ–º–µ–Ω—Ç–∞');
      return;
    }
    
    // –û—á–∏—â–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –æ—Å—Ç–∞–≤–ª—è—è –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = grid.querySelectorAll('.calendar-day-header');
    grid.innerHTML = '';
    headers.forEach(header => grid.appendChild(header));
    
    // –ë–µ—Ä–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É (—Å–µ–Ω—Ç—è–±—Ä—å 2025)
    const currentDate = new Date(window.currentTime);
    const year = currentDate.getFullYear();
    const month = currentDate.getMonth(); // 8 = —Å–µ–Ω—Ç—è–±—Ä—å
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const monthElement = calendarElement.querySelector('.calendar-month');
    const yearElement = calendarElement.querySelector('.calendar-year');
    if (monthElement) monthElement.textContent = getMonthName(month);
    if (yearElement) yearElement.textContent = year;
    
    // –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);
    
    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –∫–∞–∫ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è
    const firstDayOfWeek = firstDay.getDay();
    const startOffset = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;
    
    // –ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏
    for (let i = 0; i < startOffset; i++) {
      const emptyDay = document.createElement('div');
      emptyDay.className = 'calendar-day inactive';
      grid.appendChild(emptyDay);
    }
    
    // –î–Ω–∏ –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= lastDay.getDate(); day++) {
      const dayElement = document.createElement('div');
      const currentDayDate = new Date(year, month, day);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –¥–µ–Ω—å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏
      const isDeliveryDay = isDateAvailableForDelivery(currentDayDate);
      
      if (isDeliveryDay) {
        dayElement.className = 'calendar-day active';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π
        dayElement.addEventListener('click', (e) => {
          e.stopPropagation();
          const selectedDate = new Date(year, month, day);
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–æ–ª–µ
          const formattedDate = formatDate(selectedDate);
          const startDateInput = document.getElementById('startDateInput');
          if (startDateInput) {
            startDateInput.value = formattedDate;
          }
          
          // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
          calendarElement.classList.remove('active');
        });
      } else {
        dayElement.className = 'calendar-day inactive';
      }
      
      dayElement.textContent = day;
      grid.appendChild(dayElement);
    }
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
    const deliverySchedule = window.PRODUCT_CONFIG?.deliverySchedule || window.PROGRAM_CONFIG?.deliverySchedule || 'every-day';
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–∞—Ç—ã –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏
  function isDateAvailableForDelivery(date) {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (–Ω–µ —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    const currentTime = window.currentTime ? new Date(window.currentTime) : new Date();
    const currentDate = new Date(currentTime);
    currentDate.setHours(0, 0, 0, 0);
    
    // –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log(`üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ (–≥–ª–æ–±–∞–ª—å–Ω–∞—è): ${currentDate.toLocaleDateString('ru-RU')}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –Ω–µ –≤ –ø—Ä–æ—à–ª–æ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    if (date < currentDate) {
      console.log(`‚ùå –î–∞—Ç–∞ ${date.toLocaleDateString('ru-RU')} –≤ –ø—Ä–æ—à–ª–æ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏`);
      return false;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const deliverySchedule = window.PRODUCT_CONFIG?.deliverySchedule || window.PROGRAM_CONFIG?.deliverySchedule || 'every-day';
    
    if (deliverySchedule === 'every-other-day') {
      // –î–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ "—á–µ—Ä–µ–∑ –¥–µ–Ω—å" –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∞—Ç–∞ –≥—Ä–∞—Ñ–∏–∫—É
      const daysDiff = Math.floor((date - currentDate) / (1000 * 60 * 60 * 24));
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –¥–æ—Å—Ç–∞–≤–∫–∏
      const globalHour = currentTime.getHours();
      const globalMinutes = currentTime.getMinutes();
      const globalTimeInMinutes = globalHour * 60 + globalMinutes;
      const deadlineTimeInMinutes = 13 * 60 + 30; // 13:30
      
      let firstDeliveryDay;
      if (globalTimeInMinutes < deadlineTimeInMinutes) {
        firstDeliveryDay = 1; // –∑–∞–≤—Ç—Ä–∞
      } else {
        firstDeliveryDay = 2; // —á–µ—Ä–µ–∑ –¥–µ–Ω—å
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≥—Ä–∞—Ñ–∏–∫—É "—á–µ—Ä–µ–∑ –¥–µ–Ω—å"
      const isAvailable = daysDiff >= firstDeliveryDay && (daysDiff - firstDeliveryDay) % 2 === 0;
      
      return isAvailable;
    }
    
    // –î–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –≤—Å–µ –¥–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    return true;
  }
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  function getMonthName(month) {
    const months = [
      '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
      '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    return months[month];
  }
  
  function formatDate(date) {
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = date.getFullYear();
    return `${day}.${month}.${year}`;
  }
  
  // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥—Ä–æ–ø-–¥–∞—É–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
  const deliveryTimeInput = document.getElementById('deliveryTimeInput');
  const deliveryTimeDropdown = document.getElementById('deliveryTimeDropdown');
  const inputFieldWithIcon = deliveryTimeInput?.closest('.input-field.with-icon');
  
  // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–æ–ø-–¥–∞—É–Ω–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ input
  if (deliveryTimeInput && deliveryTimeDropdown) {
    deliveryTimeInput.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      const isActive = deliveryTimeDropdown.classList.contains('active');
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –¥—Ä–æ–ø-–¥–∞—É–Ω—ã
      document.querySelectorAll('.delivery-time-dropdown.active').forEach(dropdown => {
        if (dropdown !== deliveryTimeDropdown) {
          dropdown.classList.remove('active');
          dropdown.closest('.input-field.with-icon')?.classList.remove('active');
        }
      });
      
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥—Ä–æ–ø-–¥–∞—É–Ω
      if (isActive) {
        deliveryTimeDropdown.classList.remove('active');
        inputFieldWithIcon?.classList.remove('active');
      } else {
        deliveryTimeDropdown.classList.add('active');
        inputFieldWithIcon?.classList.add('active');
      }
    });
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–æ–ø-–¥–∞—É–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  document.addEventListener('click', (e) => {
    if (!e.target.closest('.delivery-time-dropdown') && !e.target.closest('.input-field.with-icon')) {
      document.querySelectorAll('.delivery-time-dropdown.active').forEach(dropdown => {
        dropdown.classList.remove('active');
        dropdown.closest('.input-field.with-icon')?.classList.remove('active');
      });
    }
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞—Ç –≤ –ø–æ–ø-–∞–ø–∞
  function resetPopupDates() {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    calendarDaysCount = 0;
    deliveryDates = [];
    selectedDeliveryTime = null;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    if (window.calendarDaysCount !== undefined) {
      window.calendarDaysCount = 0;
    }
    if (window.calendarStartDate !== undefined) {
      window.calendarStartDate = null;
    }
    if (window.calendarEndDate !== undefined) {
      window.calendarEndDate = null;
    }
    if (window.calendarExcludedDates !== undefined) {
      window.calendarExcludedDates = [];
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞ –¥–∞—Ç
    const startDateInput = document.getElementById('startDateInput');
    const endDateInput = document.getElementById('endDateInput');
    if (startDateInput) {
      startDateInput.value = '';
    }
    if (endDateInput) {
      endDateInput.value = '';
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏
    const deliveryTimeInput = document.getElementById('deliveryTimeInput');
    if (deliveryTimeInput) {
      deliveryTimeInput.value = '';
    }
    
    // –û—á–∏—â–∞–µ–º CSS —Å—Ç–∏–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    const calendarDays = document.querySelectorAll('.calendar-day');
    calendarDays.forEach(day => {
      day.classList.remove('selected', 'range-start', 'range-end', 'range-middle', 'range-preview', 'excluded');
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    if (window.calendarInstance) {
      window.calendarInstance.startDate = null;
      window.calendarInstance.endDate = null;
      window.calendarInstance.excludedDates = [];
      window.calendarInstance.activeInput = 'start';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    if (window.updateDeliveryDates) {
      window.updateDeliveryDates();
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º popup-total
    const popupTotal = document.querySelector('.popup-total');
    if (popupTotal) {
      popupTotal.style.display = 'none';
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–ø-–∞–ø–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ overlay –∏–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
  if (overlay) {
    overlay.addEventListener('click', () => {
      popup.classList.remove('active');
      resetPopupDates();
    });
  }
  
  if (closeBtn) {
    closeBtn.addEventListener('click', () => {
      popup.classList.remove('active');
      resetPopupDates();
    });
  }
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && popup.classList.contains('active')) {
      popup.classList.remove('active');
      resetPopupDates();
    }
  });


  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  document.addEventListener('click', (e) => {
    if (!e.target.closest('.calendar-dropdown') && !e.target.closest('.input-field')) {
      document.querySelectorAll('.calendar-dropdown.active').forEach(calendar => {
        calendar.classList.remove('active');
      });
    }
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞
  const initDeliveryInfo = () => {
    if (window.PRODUCT_CONFIG || window.PROGRAM_CONFIG) {
      updateDeliveryInfo();
      // –†–µ–Ω–¥–µ—Ä–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      renderTimeSlots();
    } else {
      // –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∂–¥–µ–º
      setTimeout(initDeliveryInfo, 100);
    }
  };
  
  initDeliveryInfo();
  
  // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –≤—ã–∑–æ–≤—ã - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  // –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  
  console.log('‚úÖ –ü–æ–ø–∞–ø –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  window.quantityPopupInitialized = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM - –£–ë–ò–†–ê–ï–ú –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–£–Æ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Æ
// document.addEventListener('DOMContentLoaded', () => {
//   // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
//   setTimeout(() => {
//     initQuantityPopup();
//   }, 100);
// });

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
window.initQuantityPopup = initQuantityPopup;

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
window.logSelectedConfiguration = logSelectedConfiguration;

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.formatDateForDelivery = formatDateForDelivery;
window.getNearestDeliveryDate = getNearestDeliveryDate;
window.updateDeliveryInfo = updateDeliveryInfo;

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å–ª–æ—Ç–∞–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.renderTimeSlots = renderTimeSlots;
window.initTimeSlotEventListeners = initTimeSlotEventListeners;

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–∞ "—Å —Å—É–ø–æ–º" –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.markSoupCheckbox = markSoupCheckbox;

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —á–µ–∫–±–æ–∫—Å–∞ "—Å –ø–µ—Ä–µ–∫—É—Å–æ–º" –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.markSnackCheckbox = markSnackCheckbox; 
